"use strict";(self.webpackChunkarktype_io=self.webpackChunkarktype_io||[]).push([[7609],{57522:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>s});var n=a(29901);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),d=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):p(p({},e),t)),a},u=function(t){var e=d(t.components);return n.createElement(o.Provider,{value:e},t.children)},m="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=d(a),c=r,s=m["".concat(o,".").concat(c)]||m[c]||k[c]||l;return a?n.createElement(s,p(p({ref:e},u),{},{components:a})):n.createElement(s,p({ref:e},u))}));function s(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,p=new Array(l);p[0]=c;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i[m]="string"==typeof t?t:r,p[1]=i;for(var d=2;d<l;d++)p[d]=a[d];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},3030:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var n=a(73268),r=a(68039),l=(a(29901),a(57522)),p=["components"],i={hide_table_of_contents:!0},o="Operators",d={unversionedId:"api/operators",id:"version-1.0.22-alpha/api/operators",title:"Operators",description:"Operating Table",source:"@site/versioned_docs/version-1.0.22-alpha/api/operators.md",sourceDirName:"api",slug:"/api/operators",permalink:"/docs/1.0.22-alpha/api/operators",draft:!1,tags:[],version:"1.0.22-alpha",frontMatter:{hide_table_of_contents:!0},sidebar:"sidebar",previous:{title:"Keywords",permalink:"/docs/1.0.22-alpha/api/keywords"},next:{title:"API",permalink:"/docs/1.0.22-alpha/api"}},u={},m=[{value:"Operating Table",id:"operating-table",level:2}],k={toc:m},c="wrapper";function s(t){var e=t.components,a=(0,r.Z)(t,p);return(0,l.kt)(c,(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"operators"},"Operators"),(0,l.kt)("h2",{id:"operating-table"},"Operating Table"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"operator"),(0,l.kt)("th",{parentName:"tr",align:null},"string"),(0,l.kt)("th",{parentName:"tr",align:null},"tuple"),(0,l.kt)("th",{parentName:"tr",align:null},"helper"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/arrayof"},"arrayOf")),(0,l.kt)("td",{parentName:"tr",align:null},'"T[]"'),(0,l.kt)("td",{parentName:"tr",align:null},'[T, "[]"]'),(0,l.kt)("td",{parentName:"tr",align:null},"arrayOf(T)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/instanceof"},"instanceOf")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},'["instanceOf", T]'),(0,l.kt)("td",{parentName:"tr",align:null},"instanceOf(T)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/intersection"},"&")),(0,l.kt)("td",{parentName:"tr",align:null},'"L&R"'),(0,l.kt)("td",{parentName:"tr",align:null},'[L, "&", R]'),(0,l.kt)("td",{parentName:"tr",align:null},"intersection(L,R)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/keyof"},"keyOf")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},'"','["keyOf", T]','"'),(0,l.kt)("td",{parentName:"tr",align:null},"keyOf(T)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/morph"},"|",">")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},'[inputType, "',"|",'>", (data) => output]'),(0,l.kt)("td",{parentName:"tr",align:null},"morph(inputType, (data) => output)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/narrow"},"=>")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},'["type", "=>" , condition]'),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/union"},"|")),(0,l.kt)("td",{parentName:"tr",align:null},'"L',"|",'R"'),(0,l.kt)("td",{parentName:"tr",align:null},'[L, "',"|",'" , R]'),(0,l.kt)("td",{parentName:"tr",align:null},"union(L,R)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/valueof"},"===")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},'["===", T]'),(0,l.kt)("td",{parentName:"tr",align:null},"valueOf(T)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/parseconfigtuple"},":")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},'["type", ":", config]'),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/validatebound"},"bound")),(0,l.kt)("td",{parentName:"tr",align:null},'"N<S<N", with comparators restricted to < or <='),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/validatedivisor"},"%")),(0,l.kt)("td",{parentName:"tr",align:null},'"N%D", where "N" is a number and "D" is a non-zero integer'),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/1.0.22-alpha/api/resolvednode"},"node")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},'["node", nodeDefinition]'),(0,l.kt)("td",{parentName:"tr",align:null},"type.from(nodeDefinition)")))))}s.isMDXComponent=!0}}]);